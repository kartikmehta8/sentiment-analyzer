{"version":3,"sources":["EmotionTable.js","App.js","reportWebVitals.js","index.js"],"names":["EmotionTable","className","this","props","emotions","Object","entries","map","element","val","React","Component","App","state","innercomp","rows","cols","id","mode","sentimentOutput","sentiment","renderTextArea","document","getElementById","value","setState","renderTextBox","sendForSentimentAnalysis","url","axios","get","then","response","data","output","style","color","fontSize","sendForEmotionAnalysis","title","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9b92e035.chunk.js","sourcesContent":["import React from 'react';\r\nimport './bootstrap.min.css';\r\n\r\nclass EmotionTable extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<table className='table table-bordered'>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{this.props.emotions &&\r\n\t\t\t\t\t\t\tObject.entries(this.props.emotions).map(function (element, val) {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<tr key={element}>\r\n\t\t\t\t\t\t\t\t\t\t<td>{element[0]}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{element[1]}</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default EmotionTable;\r\n","import './bootstrap.min.css';\r\nimport './App.css';\r\nimport EmotionTable from './EmotionTable.js';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass App extends React.Component {\r\n\tstate = {\r\n\t\tinnercomp: <textarea rows='4' cols='50' id='textinput' />,\r\n\t\tmode: 'text',\r\n\t\tsentimentOutput: [],\r\n\t\tsentiment: true,\r\n\t};\r\n\r\n\trenderTextArea = () => {\r\n\t\tdocument.getElementById('textinput').value = '';\r\n\t\tif (this.state.mode === 'url') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tinnercomp: <textarea rows='4' cols='50' id='textinput' />,\r\n\t\t\t\tmode: 'text',\r\n\t\t\t\tsentimentOutput: [],\r\n\t\t\t\tsentiment: true,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\trenderTextBox = () => {\r\n\t\tdocument.getElementById('textinput').value = '';\r\n\t\tif (this.state.mode === 'text') {\r\n\t\t\tthis.setState({\r\n\t\t\t\tinnercomp: <textarea rows='1' cols='50' id='textinput' />,\r\n\t\t\t\tmode: 'url',\r\n\t\t\t\tsentimentOutput: [],\r\n\t\t\t\tsentiment: true,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tsendForSentimentAnalysis = () => {\r\n\t\tthis.setState({ sentiment: true });\r\n\t\tlet ret = '';\r\n\t\tlet url = '.';\r\n\r\n\t\tif (this.state.mode === 'url') {\r\n\t\t\turl =\r\n\t\t\t\turl +\r\n\t\t\t\t'/url/sentiment?url=' +\r\n\t\t\t\tdocument.getElementById('textinput').value;\r\n\t\t} else {\r\n\t\t\turl =\r\n\t\t\t\turl +\r\n\t\t\t\t'/text/sentiment?text=' +\r\n\t\t\t\tdocument.getElementById('textinput').value;\r\n\t\t}\r\n\t\tret = axios.get(url);\r\n\t\tret.then((response) => {\r\n\t\t\t//Include code here to check the sentiment and fomrat the data accordingly\r\n\r\n\t\t\tthis.setState({ sentimentOutput: response.data });\r\n\t\t\tlet output = response.data;\r\n\t\t\tif (response.data === 'positive') {\r\n\t\t\t\toutput = (\r\n\t\t\t\t\t<div style={{ color: 'green', fontSize: 20 }}>{response.data}</div>\r\n\t\t\t\t);\r\n\t\t\t} else if (response.data === 'negative') {\r\n\t\t\t\toutput = (\r\n\t\t\t\t\t<div style={{ color: 'red', fontSize: 20 }}>{response.data}</div>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\toutput = (\r\n\t\t\t\t\t<div style={{ color: 'orange', fontSize: 20 }}>{response.data}</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tthis.setState({ sentimentOutput: output });\r\n\t\t});\r\n\t};\r\n\r\n\tsendForEmotionAnalysis = () => {\r\n\t\tthis.setState({ sentiment: false });\r\n\t\tlet ret = '';\r\n\t\tlet url = '.';\r\n\t\tif (this.state.mode === 'url') {\r\n\t\t\turl =\r\n\t\t\t\turl + '/url/emotion?url=' + document.getElementById('textinput').value;\r\n\t\t} else {\r\n\t\t\turl =\r\n\t\t\t\turl +\r\n\t\t\t\t'/text/emotion/?text=' +\r\n\t\t\t\tdocument.getElementById('textinput').value;\r\n\t\t}\r\n\t\tret = axios.get(url);\r\n\r\n\t\tret.then((response) => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tsentimentOutput: <EmotionTable emotions={response.data} />,\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tdocument.title = 'Sentiment Analyzer';\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='App'>\r\n\t\t\t\t<button className='btn btn-info' onClick={this.renderTextArea}>\r\n\t\t\t\t\tText\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className='btn btn-dark' onClick={this.renderTextBox}>\r\n\t\t\t\t\tURL\r\n\t\t\t\t</button>\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t{this.state.innercomp}\r\n\t\t\t\t<br />\r\n\t\t\t\t<button className='btn-primary' onClick={this.sendForSentimentAnalysis}>\r\n\t\t\t\t\tAnalyze Sentiment\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className='btn-primary' onClick={this.sendForEmotionAnalysis}>\r\n\t\t\t\t\tAnalyze Emotion\r\n\t\t\t\t</button>\r\n\t\t\t\t<br />\r\n\t\t\t\t{this.state.sentimentOutput}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}